name: Unit Tests

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run unit tests
      run: npm test
    
    - name: Run tests with coverage
      run: npm run test:coverage
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
    
    - name: Comment coverage on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          try {
            const coverageFile = path.join(process.cwd(), 'coverage', 'coverage-summary.json');
            if (fs.existsSync(coverageFile)) {
              const coverage = JSON.parse(fs.readFileSync(coverageFile, 'utf8'));
              const { total } = coverage;
              
              const comment = `## ðŸ§ª Test Coverage Report
              
              | Metric | Coverage |
              |--------|----------|
              | Statements | ${total.statements.pct}% |
              | Branches | ${total.branches.pct}% |
              | Functions | ${total.functions.pct}% |
              | Lines | ${total.lines.pct}% |
              
              Coverage threshold: 70% âœ…`;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }
          } catch (error) {
            console.log('Could not read coverage file:', error.message);
          }
